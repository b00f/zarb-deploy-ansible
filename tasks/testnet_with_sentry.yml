---
- hosts: testnet-1
  vars_files:
    - vars.yml

  tasks:
    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Create working directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /zarb
        - /zarb/node
        - /zarb/sentry

    - name: Copy genesis and config files
      copy: src={{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: '../keys/node_key.json', dest: '/zarb/node/private_key' }
        - { src: '../keys/sentry_key.json', dest: '/zarb/sentry/private_key' }
        - { src: '../files/testnet_genesis.json', dest: '/zarb/node/genesis.json' }
        - { src: '../files/testnet_genesis.json', dest: '/zarb/sentry/genesis.json' }
        - { src: '../files/testnet_config_1.toml', dest: '/zarb/node/config.toml' }
        - { src: '../files/testnet_config_sentry.toml', dest: '/zarb/sentry/config.toml' }

    - name: Stop and remove dockers
      docker_container:
        name: "{{ item }}"
        image: "{{ docker_image }}:{{ docker_image_tag }}"
        state: absent
      loop:
        - node
        - node_sentry

    - name: Remove image
      docker_image:
        state: absent
        name: "{{ docker_image }}"
        tag: "{{ docker_image_tag }}"


    - name: Restarting the nodes
      docker_container:
        name: "node"
        image: "{{ docker_image }}:{{ docker_image_tag }}"
        command: start -w /zarb -k=private_key
        volumes: "/zarb/node:/zarb"
        restart_policy: on-failure

    - name: Running sentry node
      docker_container:
        name: "node_sentry"
        image: "{{ docker_image }}:{{ docker_image_tag }}"
        command: start -w /zarb -k=private_key
        volumes: "/zarb/sentry:/zarb"
        restart_policy: on-failure
        ports:
          - "31887:31887"
          - "8080:8080"
          - "8081:8081"
          - "9090:9090"
          - "37621:37621"
